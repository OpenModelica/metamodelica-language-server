{
  "name": "metamodelica-language-server",
  "displayName": "MetaModelica Language Server",
  "description": "[Experimental] MetaModelica language server",
  "version": "0.2.0",
  "author": "Andreas Heuermann",
  "license": "See OSMC-License.txt",
  "repository": {
    "type": "git",
    "url": "https://github.com/OpenModelica/metamodelica-language-server"
  },
  "publisher": "OpenModelica",
  "categories": [
    "Programming Languages",
    "Debuggers"
  ],
  "keywords": [
    "modelica",
    "metamodelica",
    "language",
    "language-server"
  ],
  "homepage": "https://github.com/OpenModelica/metamodelica-language-server",
  "icon": "images/Modelica_Language_margin.jpg",
  "bugs": "https://github.com/OpenModelica/metamodelica-language-server/issues",
  "engines": {
    "vscode": "^1.98.0",
    "node": "22"
  },
  "activationEvents": [
    "onLanguage:metamodelica",
    "onDebugResolve:metamodelica-dbg"
  ],
  "main": "./out/client",
  "contributes": {
    "languages": [
      {
        "id": "metamodelica",
        "extensions": [
          ".mo"
        ]
      }
    ],
    "breakpoints": [
      {
        "language": "metamodelica"
      }
    ],
    "debuggers": [
      {
        "type": "metamodelica-dbg",
        "languages": [
          "metamodelica"
        ],
        "label": "MetaModelica Debug",
        "configurationAttributes": {
          "launch": {
            "required": [
              "program",
              "gdb"
            ],
            "properties": {
              "gdb": {
                "type": "string",
                "description": "Absolute path to GDB executable.",
                "default": "gdb"
              },
              "program": {
                "type": "string",
                "description": "Absolute path to OpenModelica Compiler executable omc.",
                "default": "${workspaceFolder}/build_cmake/install_cmake/bin/omc"
              },
              "arguments": {
                "type": "array",
                "items": {
                  "type": "string"
                },
                "description": "Arguments to omc. e.g., MOS file",
                "default": ["script.mos"]
              },
              "cwd": {
                "type": "string",
                "description": "Absolute path to working directory.",
                "default": "${workspaceFolder}"
              },
              "logLevel": {
                "type": "string",
                "description": "Logging level for the debugger",
                "default": "warning",
                "enum": ["debug", "log", "info", "warning", "error"]
              }
            }
          }
        },
        "initialConfigurations": [
          {
            "name": "MetaModelica Debug Launch Configuration",
            "type": "metamodelica-dbg",
            "request": "launch",
            "gdb": "gdb",
            "program": "omc",
            "arguments": ["script.mos"],
            "cwd": "${workspaceFolder}",
            "logLevel": "info"
          }
        ],
        "configurationSnippets": [
          {
            "label": "MetMetaModelica Debug Launch Configuration",
            "description": "A new configuration for 'debugging' the OpenModelica compiler.",
            "body": {
              "name": "MetaModelica Debug Launch Configuration",
              "type": "metamodelica-dbg",
              "request": "launch",
              "gdb": "gdb",
              "program": "omc",
              "arguments": ["script.mos"],
              "cwd": "${workspaceFolder}",
              "logLevel": "info"
            }
          }
        ]
      }
    ]
  },
  "scripts": {
    "vscode:prepublish": "node esbuild.config.js --minify",
    "esbuild": "node esbuild.config.js",
    "esbuild-watch": "node esbuild.config.js --watch",
    "test-compile": "tsc -b ./",
    "lint": "eslint ./src/** ./test/** --ext .ts,.tsx",
    "tree-sitter-metamodelica": "cd src/server && node tree.sitter.metamodelica.download.js",
    "tree-sitter-gdbmi": "cd node_modules/tree-sitter-gdbmi && npx tree-sitter generate && npx tree-sitter build --wasm --docker . && cd ../../src/debugger/parser && node tree.sitter.gdbmi.js",
    "postinstall": "npm run tree-sitter-metamodelica && npm run tree-sitter-gdbmi",
    "test": "npm run test-compile && node ./dist/test/runTest",
    "all": "npm run postinstall && npm run esbuild && npm run lint && npm run test && npm run vscode:prepublish"
  },
  "dependencies": {
    "vscode-languageclient": "^9.0.1",
    "tree-sitter": "^0.21.1",
    "vscode-languageserver": "^9.0.1",
    "vscode-languageserver-textdocument": "^1.0.12",
    "web-tree-sitter": "^0.22.5"
  },
  "devDependencies": {
    "@types/mocha": "^10.0.10",
    "@types/node": "^22.13.10",
    "@typescript-eslint/eslint-plugin": "^8.26.1",
    "@typescript-eslint/parser": "^8.26.1",
    "esbuild": "^0.25.1",
    "eslint": "^9.22.0",
    "mocha": "^11.1.0",
    "ts-node": "^10.9.2",
    "@types/vscode": "^1.98.0",
    "@vscode/test-electron": "^2.4.1",
    "glob": "^11.0.1",
    "axios": "^1.8.3",
    "@vscode/debugadapter": "^1.68.0",
    "tree-sitter-cli": "^0.23.2",
    "tree-sitter-gdbmi": "github:novafacing/tree-sitter-gdbmi"
  }
}
